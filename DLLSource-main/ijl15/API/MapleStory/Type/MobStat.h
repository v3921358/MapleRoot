#pragma once
#include "Assert.h"

class MobStat
{
public:
	int nLevel;
	int aDamagedElemAttr[8];
	int nPAD;
	int nPAD_;
	int rPAD_;
	int tPAD_;
	int nPDR;
	int nPDR_;
	int rPDR_;
	int tPDR_;
	int nMAD;
	int nMAD_;
	int rMAD_;
	int tMAD_;
	int nMDR;
	int nMDR_;
	int rMDR_;
	int tMDR_;
	int nACC;
	int nACC_;
	int rACC_;
	int tACC_;
	int nEVA;
	int nEVA_;
	int rEVA_;
	int tEVA_;
	int nSpeed;
	int nSpeed_;
	int rSpeed_;
	int tSpeed_;
	int nStun_;
	int rStun_;
	int tStun_;
	int nFreeze_;
	int rFreeze_;
	int tFreeze_;
	int nPoison_;
	int rPoison_;
	int tPoison_;
	unsigned int wPoison_;
	int nSeal_;
	int rSeal_;
	int tSeal_;
	int nDarkness_;
	int rDarkness_;
	int tDarkness_;
	int nPowerUp_;
	int rPowerUp_;
	int tPowerUp_;
	int nMagicUp_;
	int rMagicUp_;
	int tMagicUp_;
	int nPGuardUp_;
	int rPGuardUp_;
	int tPGuardUp_;
	int nMGuardUp_;
	int rMGuardUp_;
	int tMGuardUp_;
	int nDoom_;
	int rDoom_;
	int tDoom_;
	int nWeb_;
	int rWeb_;
	int tWeb_;
	unsigned int wWeb_;
	int nPImmune_;
	int rPImmune_;
	int tPImmune_;
	int nMImmune_;
	int rMImmune_;
	int tMImmune_;
	int nShowdown_;
	int rShowdown_;
	int tShowdown_;
	int nHardSkin_;
	int rHardSkin_;
	int tHardSkin_;
	int nAmbush_;
	int rAmbush_;
	int tAmbush_;
	unsigned int wAmbush_;
	int nVenom_;
	int rVenom_;
	int tVenom_;
	unsigned int wVenom_;
	int nBlind_;
	int rBlind_;
	int tBlind_;
	int nSealSkill_;
	int rSealSkill_;
	int tSealSkill_;
	int nDazzle_;
	int rDazzle_;
	int tDazzle_;
	int nRiseByToss_;
	int rRiseByToss_;
	int tRiseByToss_;
	int nPCounter_;
	int rPCounter_;
	int tPCounter_;
	int wPCounter_;
	int nMCounter_;
	int rMCounter_;
	int tMCounter_;
	int wMCounter_;
	int nCounterProb_;
	int nBodyPressure_;
	int rBodyPressure_;
	int tBodyPressure_;
	int nWeakness_;
	int rWeakness_;
	int tWeakness_;
	int nTimeBomb_;
	int rTimeBomb_;
	int tTimeBomb_;
	unsigned int wTimeBomb_;
	int nMagicCrash_;
	int rMagicCrash_;
	int tMagicCrash_;
	int nDamagedElemAttr_;
	int rDamagedElemAttr_;
	int tDamagedElemAttr_;
	int nHealByDamage_;
	int rHealByDamage_;
	int tHealByDamage_;
	long double nFs;
	int bInvincible;
	int bDisable;
	int bCannotEvade;
};

static_assert_size(sizeof(MobStat), 0x228);