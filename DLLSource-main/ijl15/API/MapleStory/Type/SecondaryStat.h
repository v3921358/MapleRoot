#pragma once
#include "Assert.h"
#include "BasicStat.h"

class SecondaryStat
{
public:
	int GetACC(BasicStat* bs) {
		return 1.2 * bs->GetDEX() + this->nItemACC.Fuse();
	}
	/*static int GetACC(SecondaryStat* ss, CharacterData* cd, int nPdsACCR, int nBaseACC, int* pIncinOrg) {
		return reinterpret_cast<int(__fastcall*)
			(SecondaryStat*, void*, CharacterData*, int, int, int*)>(0x007261D0)
			(ss, nullptr, cd, nPdsACCR, nBaseACC, pIncinOrg);
	}

	static int GetPAD(SecondaryStat* ss, CharacterData* cd, int nBulletItemID, int nPsdPADX, int nPsdPADR, int nIncPAD, int* pIncinOrg) {
		return reinterpret_cast<int(__fastcall*)
			(SecondaryStat*, void*, CharacterData*, int, int, int, int, int*)>(0x00725A70)
			(ss, nullptr, cd, nBulletItemID, nPsdPADX, nPsdPADR, nIncPAD, pIncinOrg);
	}

	static int GetMAD(SecondaryStat* ss, int nPsdMADX, int nPsdMADR, int nDragonFury, int* pIncinOrg) {
		return reinterpret_cast<int(__fastcall*)
			(SecondaryStat*, void*, int, int, int, int*)>(0x00723700)
			(ss, nullptr, nPsdMADX, nPsdMADR, nDragonFury, pIncinOrg);
	}*/

	ZtlSecure<int> nItemPAD;
	ZtlSecure<int> nPAD;
	ZtlSecure<int> rPAD;
	ZtlSecure<int> tPAD;
	ZtlSecure<int> nItemPADR;
	ZtlSecure<int> nItemPDD;
	ZtlSecure<int> nPDD;
	ZtlSecure<int> rPDD;
	ZtlSecure<int> tPDD;
	ZtlSecure<int> nItemPDDR;
	ZtlSecure<int> nItemMAD;
	ZtlSecure<int> nMAD;
	ZtlSecure<int> rMAD;
	ZtlSecure<int> tMAD;
	ZtlSecure<int> nItemMADR;
	ZtlSecure<int> nItemMDD;
	ZtlSecure<int> nMDD;
	ZtlSecure<int> rMDD;
	ZtlSecure<int> tMDD;
	ZtlSecure<int> nItemMDDR;
	ZtlSecure<int> nItemACC;
	ZtlSecure<int> nACC;
	ZtlSecure<int> rACC;
	ZtlSecure<int> tACC;
	ZtlSecure<int> nItemACCR;
	ZtlSecure<int> nItemEVA;
	ZtlSecure<int> nEVA;
	ZtlSecure<int> rEVA;
	ZtlSecure<int> tEVA;
	ZtlSecure<int> nItemEVAR;
	ZtlSecure<int> nItemCraft;
	ZtlSecure<int> nCraft;
	ZtlSecure<int> rCraft;
	ZtlSecure<int> tCraft;
	ZtlSecure<int> nItemSpeed;
	ZtlSecure<int> nSpeed;
	ZtlSecure<int> rSpeed;
	ZtlSecure<int> tSpeed;
	ZtlSecure<int> nItemJump;
	ZtlSecure<int> nJump;
	ZtlSecure<int> rJump;
	ZtlSecure<int> tJump;
	ZtlSecure<int> nMagicGuard;
	ZtlSecure<int> rMagicGuard;
	ZtlSecure<int> tMagicGuard;
	ZtlSecure<int> nDarkSight;
	ZtlSecure<int> rDarkSight;
	ZtlSecure<int> tDarkSight;
	ZtlSecure<int> mDarkSight;
	ZtlSecure<int> pDarkSight;
	ZtlSecure<int> nBooster;
	ZtlSecure<int> rBooster;
	ZtlSecure<int> tBooster;
	ZtlSecure<int> nPowerGuard;
	ZtlSecure<int> rPowerGuard;
	ZtlSecure<int> tPowerGuard;
	ZtlSecure<int> nMechanic;
	ZtlSecure<int> rMechanic;
	ZtlSecure<int> tMechanic;
	ZtlSecure<int> nMaxHP;
	ZtlSecure<int> rMaxHP;
	ZtlSecure<int> tMaxHP;
	ZtlSecure<int> nMaxMP;
	ZtlSecure<int> rMaxMP;
	ZtlSecure<int> tMaxMP;
	ZtlSecure<int> nInvincible;
	ZtlSecure<int> rInvincible;
	ZtlSecure<int> tInvincible;
	ZtlSecure<int> nSoulArrow;
	ZtlSecure<int> rSoulArrow;
	ZtlSecure<int> tSoulArrow;
	ZtlSecure<int> nStun;
	ZtlSecure<int> rStun;
	ZtlSecure<int> tStun;
	ZtlSecure<int> nPoison;
	ZtlSecure<int> rPoison;
	ZtlSecure<int> tPoison;
	ZtlSecure<int> nSeal;
	ZtlSecure<int> rSeal;
	ZtlSecure<int> tSeal;
	ZtlSecure<int> nDarkness;
	ZtlSecure<int> rDarkness;
	ZtlSecure<int> tDarkness;
	ZtlSecure<int> nComboCounter;
	ZtlSecure<int> rComboCounter;
	ZtlSecure<int> tComboCounter;
	ZtlSecure<int> mComboCounter;
	ZtlSecure<int> nWeaponCharge;
	ZtlSecure<int> rWeaponCharge;
	ZtlSecure<int> tWeaponCharge;
	ZtlSecure<int> nDragonBlood;
	ZtlSecure<int> rDragonBlood;
	ZtlSecure<int> tDragonBlood;
	ZtlSecure<int> nHolySymbol;
	ZtlSecure<int> rHolySymbol;
	ZtlSecure<int> tHolySymbol;
	ZtlSecure<int> nMesoUp;
	ZtlSecure<int> rMesoUp;
	ZtlSecure<int> tMesoUp;
	ZtlSecure<int> nShadowPartner;
	ZtlSecure<int> rShadowPartner;
	ZtlSecure<int> tShadowPartner;
	ZtlSecure<int> nPickPocket;
	ZtlSecure<int> rPickPocket;
	ZtlSecure<int> tPickPocket;
	ZtlSecure<int> nMesoGuard;
	ZtlSecure<int> rMesoGuard;
	ZtlSecure<int> tMesoGuard;
	ZtlSecure<int> nThaw;
	ZtlSecure<int> rThaw;
	ZtlSecure<int> tThaw;
	ZtlSecure<int> nWeakness;
	ZtlSecure<int> rWeakness;
	ZtlSecure<int> tWeakness;
	ZtlSecure<int> nCurse;
	ZtlSecure<int> rCurse;
	ZtlSecure<int> tCurse;
	ZtlSecure<int> nSlow;
	ZtlSecure<int> rSlow;
	ZtlSecure<int> tSlow;
	ZtlSecure<int> nMorph;
	ZtlSecure<int> rMorph;
	ZtlSecure<int> tMorph;
	ZtlSecure<int> nGhost;
	ZtlSecure<int> rGhost;
	ZtlSecure<int> tGhost;
	ZtlSecure<int> nRegen;
	ZtlSecure<int> rRegen;
	ZtlSecure<int> tRegen;
	ZtlSecure<int> nBasicStatUp;
	ZtlSecure<int> rBasicStatUp;
	ZtlSecure<int> tBasicStatUp;
	ZtlSecure<int> nStance;
	ZtlSecure<int> rStance;
	ZtlSecure<int> tStance;
	ZtlSecure<int> nSharpEyes;
	ZtlSecure<int> rSharpEyes;
	ZtlSecure<int> tSharpEyes;
	ZtlSecure<int> mSharpEyes;
	ZtlSecure<int> nManaReflection;
	ZtlSecure<int> rManaReflection;
	ZtlSecure<int> tManaReflection;
	ZtlSecure<int> nAttract;
	ZtlSecure<int> rAttract;
	ZtlSecure<int> tAttract;
	ZtlSecure<int> nSpiritJavelin;
	ZtlSecure<int> rSpiritJavelin;
	ZtlSecure<int> tSpiritJavelin;
	ZtlSecure<int> mSpiritJavelin;
	ZtlSecure<int> nInfinity;
	ZtlSecure<int> rInfinity;
	ZtlSecure<int> tInfinity;
	ZtlSecure<int> tUpdateInfinity;
	ZtlSecure<int> nHolyshield;
	ZtlSecure<int> rHolyshield;
	ZtlSecure<int> tHolyshield;
	ZtlSecure<int> nHamString;
	ZtlSecure<int> rHamString;
	ZtlSecure<int> tHamString;
	ZtlSecure<int> nBlind;
	ZtlSecure<int> rBlind;
	ZtlSecure<int> tBlind;
	ZtlSecure<int> nConcentration;
	ZtlSecure<int> rConcentration;
	ZtlSecure<int> tConcentration;
	ZtlSecure<int> nBanMap;
	ZtlSecure<int> rBanMap;
	ZtlSecure<int> tBanMap;
	ZtlSecure<int> mBanMap;
	ZtlSecure<int> nMaxLevelBuff;
	ZtlSecure<int> rMaxLevelBuff;
	ZtlSecure<int> tMaxLevelBuff;
	ZtlSecure<int> nAura;
	ZtlSecure<int> rAura;
	ZtlSecure<int> tAura;
	ZtlSecure<int> tUpdateAura;
	ZtlSecure<int> nSuperBody;
	ZtlSecure<int> rSuperBody;
	ZtlSecure<int> tSuperBody;
	ZtlSecure<int> nDarkAura;
	ZtlSecure<int> rDarkAura;
	ZtlSecure<int> tDarkAura;
	ZtlSecure<int> cDarkAura;
	ZtlSecure<int> nBlueAura;
	ZtlSecure<int> rBlueAura;
	ZtlSecure<int> tBlueAura;
	ZtlSecure<int> cBlueAura;
	ZtlSecure<int> nYellowAura;
	ZtlSecure<int> rYellowAura;
	ZtlSecure<int> tYellowAura;
	ZtlSecure<int> cYellowAura;
	ZtlSecure<int> nBarrier;
	ZtlSecure<int> tBarrier;
	ZtlSecure<int> rBarrier;
	ZtlSecure<int> nDojangShield;
	ZtlSecure<int> tDojangShield;
	ZtlSecure<int> rDojangShield;
	ZtlSecure<int> nReverseInput;
	ZtlSecure<int> rReverseInput;
	ZtlSecure<int> tReverseInput;
	ZtlSecure<int> nDojangBerserk;
	ZtlSecure<int> rDojangBerserk;
	ZtlSecure<int> tDojangBerserk;
	ZtlSecure<int> nDojangInvincible;
	ZtlSecure<int> rDojangInvincible;
	ZtlSecure<int> tDojangInvincible;
	ZtlSecure<int> nMesoUpByItem_;
	ZtlSecure<int> nMesoUpByItem;
	ZtlSecure<int> rMesoUpByItem;
	ZtlSecure<int> tMesoUpByItem;
	ZtlSecure<int> nItemUpByItem_;
	ZtlSecure<int> nItemUpByItem;
	ZtlSecure<int> rItemUpByItem;
	ZtlSecure<int> tItemUpByItem;
	ZtlSecure<int> xItemUpByItem;
	ZtlSecure<int> nRespectPImmune_;
	ZtlSecure<int> nRespectPImmune;
	ZtlSecure<int> rRespectPImmune;
	ZtlSecure<int> tRespectPImmune;
	ZtlSecure<int> nRespectMImmune;
	ZtlSecure<int> nRespectMImmune_;
	ZtlSecure<int> rRespectMImmune;
	ZtlSecure<int> tRespectMImmune;
	ZtlSecure<char> nDefenseAtt_;
	ZtlSecure<int> nDefenseAtt;
	ZtlSecure<int> rDefenseAtt;
	ZtlSecure<int> tDefenseAtt;
	ZtlSecure<char> nDefenseState_;
	ZtlSecure<int> nDefenseState;
	ZtlSecure<int> rDefenseState;
	ZtlSecure<int> tDefenseState;
	ZtlSecure<int> nIncEffectHPPotion_;
	ZtlSecure<int> nIncEffectHPPotion;
	ZtlSecure<int> rIncEffectHPPotion;
	ZtlSecure<int> tIncEffectHPPotion;
	ZtlSecure<int> nIncEffectMPPotion_;
	ZtlSecure<int> nIncEffectMPPotion;
	ZtlSecure<int> rIncEffectMPPotion;
	ZtlSecure<int> tIncEffectMPPotion;
	ZtlSecure<int> nSpark;
	ZtlSecure<int> rSpark;
	ZtlSecure<int> tSpark;
	ZtlSecure<int> nSoulMasterFinal;
	ZtlSecure<int> rSoulMasterFinal;
	ZtlSecure<int> tSoulMasterFinal;
	ZtlSecure<int> nWindBreakerFinal;
	ZtlSecure<int> rWindBreakerFinal;
	ZtlSecure<int> tWindBreakerFinal;
	ZtlSecure<int> nElementalReset;
	ZtlSecure<int> rElementalReset;
	ZtlSecure<int> tElementalReset;
	ZtlSecure<int> nWindWalk;
	ZtlSecure<int> rWindWalk;
	ZtlSecure<int> tWindWalk;
	ZtlSecure<int> nEventRate;
	ZtlSecure<int> rEventRate;
	ZtlSecure<int> tEventRate;
	ZtlSecure<int> nComboAbilityBuff;
	ZtlSecure<int> rComboAbilityBuff;
	ZtlSecure<int> tComboAbilityBuff;
	ZtlSecure<int> nComboDrain;
	ZtlSecure<int> rComboDrain;
	ZtlSecure<int> tComboDrain;
	ZtlSecure<int> nComboBarrier;
	ZtlSecure<int> rComboBarrier;
	ZtlSecure<int> tComboBarrier;
	ZtlSecure<int> nBodyPressure;
	ZtlSecure<int> rBodyPressure;
	ZtlSecure<int> tBodyPressure;
	ZtlSecure<int> nSmartKnockback;
	ZtlSecure<int> rSmartKnockback;
	ZtlSecure<int> tSmartKnockback;
	ZtlSecure<int> nRepeatEffect;
	ZtlSecure<int> rRepeatEffect;
	ZtlSecure<int> tRepeatEffect;
	ZtlSecure<int> nExpBuffRate;
	ZtlSecure<int> rExpBuffRate;
	ZtlSecure<int> tExpBuffRate;
	ZtlSecure<int> nStopPortion;
	ZtlSecure<int> rStopPortion;
	ZtlSecure<int> tStopPortion;
	ZtlSecure<int> nStopMotion;
	ZtlSecure<int> rStopMotion;
	ZtlSecure<int> tStopMotion;
	ZtlSecure<int> nFear;
	ZtlSecure<int> rFear;
	ZtlSecure<int> tFear;
	ZtlSecure<int> nEvanSlow;
	ZtlSecure<int> rEvanSlow;
	ZtlSecure<int> tEvanSlow;
	ZtlSecure<int> nMagicShield;
	ZtlSecure<int> rMagicShield;
	ZtlSecure<int> tMagicShield;
	ZtlSecure<int> mMagicShield;
	ZtlSecure<int> nMagicResistance;
	ZtlSecure<int> rMagicResistance;
	ZtlSecure<int> tMagicResistance;
	ZtlSecure<int> nSoulStone;
	ZtlSecure<int> rSoulStone;
	ZtlSecure<int> tSoulStone;
	ZtlSecure<int> nFlying;
	ZtlSecure<int> rFlying;
	ZtlSecure<int> tFlying;
	ZtlSecure<int> nFrozen;
	ZtlSecure<int> rFrozen;
	ZtlSecure<int> tFrozen;
	ZtlSecure<int> nAssistCharge;
	ZtlSecure<int> rAssistCharge;
	ZtlSecure<int> tAssistCharge;
	ZtlSecure<int> nEnrage;
	ZtlSecure<int> rEnrage;
	ZtlSecure<int> tEnrage;
	ZtlSecure<int> nSuddenDeath;
	ZtlSecure<int> rSuddenDeath;
	ZtlSecure<int> tSuddenDeath;
	ZtlSecure<int> mSuddenDeath;
	ZtlSecure<int> nNotDamaged;
	ZtlSecure<int> rNotDamaged;
	ZtlSecure<int> tNotDamaged;
	ZtlSecure<int> nFinalCut;
	ZtlSecure<int> rFinalCut;
	ZtlSecure<int> tFinalCut;
	ZtlSecure<int> nThornsEffect;
	ZtlSecure<int> rThornsEffect;
	ZtlSecure<int> tThornsEffect;
	ZtlSecure<int> nSwallowAttackDamage;
	ZtlSecure<int> rSwallowAttackDamage;
	ZtlSecure<int> tSwallowAttackDamage;
	ZtlSecure<int> nMorewildDamageUp;
	ZtlSecure<int> rMorewildDamageUp;
	ZtlSecure<int> tMorewildDamageUp;
	ZtlSecure<int> nEMHP_;
	ZtlSecure<int> nEMHP;
	ZtlSecure<int> rEMHP;
	ZtlSecure<int> tEMHP;
	ZtlSecure<int> nEMMP_;
	ZtlSecure<int> nEMMP;
	ZtlSecure<int> rEMMP;
	ZtlSecure<int> tEMMP;
	ZtlSecure<int> nEPAD_;
	ZtlSecure<int> nEPAD;
	ZtlSecure<int> rEPAD;
	ZtlSecure<int> tEPAD;
	ZtlSecure<int> nEPDD_;
	ZtlSecure<int> nEPDD;
	ZtlSecure<int> rEPDD;
	ZtlSecure<int> tEPDD;
	ZtlSecure<int> nEMDD_;
	ZtlSecure<int> nEMDD;
	ZtlSecure<int> rEMDD;
	ZtlSecure<int> tEMDD;
	ZtlSecure<int> nGuard;
	ZtlSecure<int> rGuard;
	ZtlSecure<int> tGuard;
	ZtlSecure<int> nMine;
	ZtlSecure<int> rMine;
	ZtlSecure<int> tMine;
	ZtlSecure<int> nSafetyDamage;
	ZtlSecure<int> rSafetyDamage;
	ZtlSecure<int> tSafetyDamage;
	ZtlSecure<int> nSafetyAbsorb;
	ZtlSecure<int> rSafetyAbsorb;
	ZtlSecure<int> tSafetyAbsorb;
	ZtlSecure<int> nCyclone;
	ZtlSecure<int> rCyclone;
	ZtlSecure<int> tCyclone;
	ZtlSecure<int> nSwallowCritical;
	ZtlSecure<int> rSwallowCritical;
	ZtlSecure<int> tSwallowCritical;
	ZtlSecure<int> nSwallowMaxMP;
	ZtlSecure<int> rSwallowMaxMP;
	ZtlSecure<int> tSwallowMaxMP;
	ZtlSecure<int> nSwallowDefence;
	ZtlSecure<int> rSwallowDefence;
	ZtlSecure<int> tSwallowDefence;
	ZtlSecure<int> nSwallowEvasion;
	ZtlSecure<int> rSwallowEvasion;
	ZtlSecure<int> tSwallowEvasion;
	ZtlSecure<int> tSwallowBuffTime;
	ZtlSecure<int> nConversion;
	ZtlSecure<int> rConversion;
	ZtlSecure<int> tConversion;
	ZtlSecure<int> nRevive;
	ZtlSecure<int> rRevive;
	ZtlSecure<int> tRevive;
	ZtlSecure<int> nSneak;
	ZtlSecure<int> rSneak;
	ZtlSecure<int> tSneak;
	ZtlSecure<int> nMorewildMaxHP;
	ZtlSecure<int> rMorewildMaxHP;
	ZtlSecure<int> tMorewildMaxHP;
	ZtlSecure<int> nDice;
	ZtlSecure<int> rDice;
	ZtlSecure<int> tDice;
	int aDiceInfo[22];
	ZtlSecure<int> nBlessingArmor;
	ZtlSecure<int> rBlessingArmor;
	ZtlSecure<int> tBlessingArmor;
	ZtlSecure<int> nBlessingArmorIncPAD;
	ZtlSecure<int> nDamR;
	ZtlSecure<int> rDamR;
	ZtlSecure<int> tDamR;
	ZtlSecure<int> nTeleportMasteryOn;
	ZtlSecure<int> rTeleportMasteryOn;
	ZtlSecure<int> tTeleportMasteryOn;
	ZtlSecure<int> nCombatOrders;
	ZtlSecure<int> rCombatOrders;
	ZtlSecure<int> tCombatOrders;
	ZtlSecure<int> nBeholder;
	ZtlSecure<int> rBeholder;
	ZtlSecure<int> tBeholder;
	ZtlSecure<int> nSummonBomb;
	ZtlSecure<int> rSummonBomb;
	ZtlSecure<int> tSummonBomb;
	ZtlSecure<int> lSummonBomb;
	//ZRef<TemporaryStatBase<long>> aTemporaryStat[7];
};

static_assert_size(sizeof(SecondaryStat), 0x13B8);